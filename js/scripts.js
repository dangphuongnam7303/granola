/*!
 * Start Bootstrap - Agency v7.0.12 (https://startbootstrap.com/theme/agency)
 * Copyright 2013-2023 Start Bootstrap
 * Licensed under MIT (https://github.com/StartBootstrap/startbootstrap-agency/blob/master/LICENSE)
 */
//
// Scripts
// 
//khai b√°o c√°c swal.fire


const listProduct = [{
        id: 1,
        name: "S·∫£n ph·∫©m 1",
        price: 50,
        title1:'Granola Si√™u H·∫°t ƒÇn Ki√™ng Healthy Food, Ng≈© C·ªëc Si√™u H·∫°t Gi·∫£m C√¢n Dinh D∆∞·ª°ng Kh√¥ng ƒê∆∞·ªùng, √ìc Ch√≥ ƒê·ªè, D√¢u T√¢y, Th√™m M·∫Øc Ca 500gr',
        title2:'Gi√∫p h·ªó tr·ª£ gi·∫£m c√¢n t·ª± nhi√™n, ƒë·∫∑c bi·ªát ƒë·∫£m b·∫£o an to√†n cho s·ª©c kh·ªèe v·ªõi nguy√™n li·ªáu ƒë·∫ßu v√†o v√† quy tr√¨nh s·∫£n xu·∫•t ƒë√£ ƒë∆∞·ª£c ki·ªÉm nghi·ªám v√† c·∫•p ch·ª©ng ch·ªâ An to√†n VSTP ISO ti√™u chu·∫©n Qu·ªëc T·∫ø ƒê∆∞·ª£c mix t·ª´ 12 lo·∫°i H·∫°t & Qu·∫£ nh·∫≠p kh·∫©u nguy√™n v·ªã, n∆∞·ªõng c√πng y·∫øn m·∫°ch √öc & m·∫≠t ong hoa nh√£n, ƒëem ƒë·∫øn v·ªã th∆°m ngon, gi√≤n r·ª•m, s·ª≠ d·ª•ng thay th·∫ø ƒë·ªì ƒÉn v·∫∑t',
        img: './assets/img/products/sp6.jpg'
    },
    {
        id: 2,
        name: "S·∫£n ph·∫©m 2",
        price: 50,
        title1:'ƒÇn ngon - d√°ng v·∫´n eo thon c√πng ng≈© c·ªëc gi·∫£m c√¢n kh√¥ng ƒë∆∞·ªùng Granola si√™u h·∫°t c·ªßa nh√† Nofa',
        title2:'Mix t·ª´ h·∫°t - qu·∫£ kh√¥ v√† y·∫øn m·∫°ch n∆∞·ªõng m·∫≠t ong 4 v·ªã, gi√∫p b·∫°n v·∫´n khong nh·ªØng c√≥ ngay m·ªôt m√≥n snack ƒÉn v·∫∑t ngon mi·ªáng gi√≤n r·ª•m m√† v·∫´n gi√∫p ki·ªÉm so√°t c√¢n n·∫∑ng, h·ªó tr·ª£ gi·∫£m c√¢n c·ª±c k·ª≥ hi·ªáu qu·∫£ ngay t·∫°i nh√† üòä',
        img: './assets/img/products/sp9.webp'
    },
    {
        id: 3,
        name: "S·∫£n ph·∫©m 3",
        price: 50,
        title1:'1Ô∏è‚É£ DailyFood Vi·ªát Nam ƒë∆∞·ª£c freeship t·ª´ ƒë∆°n h√†ng 50k,<br>2Ô∏è‚É£ B·∫£o h√†nh 1 ƒë·ªïi 1 v·ªõi b·∫•t k·ª≥ l√Ω do n√†o m√† kh√°ch h√†ng kh√¥ng h√†i l√≤ng',
        title2:'S·∫£n ph·∫©m: Ng≈© C·ªëc Granola Si√™u Macca ‚ö°Ô∏è Granola ƒÇn Ki√™ng Si√™u H·∫°t Kh√¥ng Y·∫øn M·∫°ch N∆∞·ªõng M·∫≠t Ong Cao C·∫•p DailyFood <br> Ch√≠nh H√£ng Th∆∞∆°ng hi·ªáu: Healthy Food Vi·ªát Nam',
        img: './assets/img/products/sp3.webp'
    },
    {
        id: 4,
        name: "S·∫£n ph·∫©m 4",
        price: 50,
        title1:'Gi·∫£m c√¢n ƒë·∫∑c bi·ªát: Kh√¥ng ƒë∆∞·ªùng, T·ªët cho s·ª©c kh·ªèe, Kh√¥ng GMO, Kh√¥ng gluten, Kh√¥ng cholesterol',
        title2:'H·∫°t Chia hay c√≤n g·ªçi l√† Salvia Hispaniola l√† th·ª±c ph·∫©m ch·ª©a nhi·ªÅu ch·∫•t dinh d∆∞·ª°ng hi·∫øm c√≥ trong th·∫ø gi·ªõi th·ª±c ph·∫©m, ƒë·∫∑c bi·ªát l√† nh·ªØng ch·∫•t m√† ch√∫ng ta kh√≥ c√≥ th·ªÉ b·ªï sung ƒë∆∞·ª£c b·∫±ng thu·ªëc b·ªï nh∆∞: ƒê·∫°m cao nh∆∞ng kh√¥ng ch·ª©a #Cholesterol; C√°c lo·∫°i kho√°ng ch·∫•t (ph·ªët pho, Canxi, S·∫Øt,‚Ä¶); Ch·∫•t x∆° g·∫•p 3,5 l·∫ßn ch·∫•t x∆° so v·ªõi y·∫øn m·∫°ch; Omeg-3-6-9 (g·∫•p 8 l·∫ßn c√° h·ªìi); Ch·∫•t ch·ªëng oxy ho√° ngang b·∫±ng v·ªõi qu·∫£ Bluberries',
        img: './assets/img/products/sp4.webp'
    },
    {
        id: 5,
        name: "S·∫£n ph·∫©m 5",
        price: 50,
        title1:'500g H·∫°t Chia √öc Nh·∫≠p kh·∫©u Ch√≠nh H√£ng Absolute Organic H·ªØu C∆° NOFA',
        title2:'Gi·∫£m c√¢n ƒë·∫∑c bi·ªát: Kh√¥ng Trans Fat, Kh√¥ng ƒë∆∞·ªùng, Kh√¥ng lactose, T·ªët cho s·ª©c kh·ªèe, Kh√¥ng cholesterol',
        img: './assets/img/products/sp8.webp'
    },
    {
        id: 6,
        name: "S·∫£n ph·∫©m 6",
        price: 50,
        title1:'H·∫°t Dinh D∆∞·ª°ng Mix T·ªïng H·ª£p 500gr',
        img: './assets/img/products/sp6.webp',
        title2:'H·∫°t dinh d∆∞·ª°ng mix c√°c lo·∫°i h·∫°t t·ªïng h·ª£p s·∫•y kh√¥,Granola si√™u h·∫°t, granola ƒÉn ki√™ng √ìc ch√≥, h·∫°nh nh√¢n, macca, b√≠ xanh, ƒëi·ªÅu ƒë∆∞·ª£c mix tr·ªôn t·ª´ c√°c lo·∫°i h·∫°t dinh d∆∞·ª°ng  t·ªët nh·∫•t cho s·ª©c kh·ªèe, ƒë∆∞·ª£c l·ª±a ch·ªçn b·ªüi nh·ªØng H·∫°t ngon nh·∫•t, nh√¢n to, ƒë√£ s·∫•y ch√≠n, r·∫•t gi√≤n, th∆°m, ngon ‚Ä¶',
    }
]

function showProduct(data) {
    const main_content = document.querySelector('#show-product');
    if (main_content) {
        main_content.innerHTML = '';

    }
    for (let item of data) {
        if (main_content) {
            main_content.innerHTML += `
            <div class="col-lg-4 col-sm-6 mb-4">
            <!-- Portfolio item 1-->
            <div class="portfolio-item">
                <a class="portfolio-link" data-bs-toggle="modal" href="#portfolioModal${item.id}">
                    <div class="portfolio-hover">
                        <div class="portfolio-hover-content"><i class="fas fa-plus fa-3x"></i></div>
                    </div>
                    <img class="img-fluid" src="${item.img}" height="300px" alt="..." />
                </a>
                <div class="portfolio-caption">
                    <div class="portfolio-caption-heading">${item.name}</div>
                    <div class="portfolio-caption-subheading text-muted">${item.price}</div>
                </div>
            </div>
        </div>
        `
        }

    }
}
showProduct(listProduct);

function showModal(data) {
    var main_modal = document.querySelector('body');

    for (let item of data) {
        if (main_modal) {
            main_modal.innerHTML += `
            <div class="portfolio-modal modal fade" id="portfolioModal${item.id}" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="close-modal" data-bs-dismiss="modal"><img src="assets/img/close-icon.svg" alt="Close modal" /></div>
                    <div class="container">
                        <div class="row justify-content-center">
                            <div class="col-lg-8">
                                <div class="modal-body">
                                    <!-- Project details-->
                                    <h2 class="text-uppercase">${item.name}</h2>
                                    <p>${item.title1}</p>
                                    <img class="img-fluid d-block mx-auto" height="300px" src="${item.img}" alt="..." />
                                    <p>${item.title2}</p>
                                    <ul class="list-inline" style="font-size:30px">
                                        <li>
                                            <strong>Price:</strong>
                                            ${item.price}
                                        </li>
                                    </ul>
                                    <button class="btn btn-primary btn-xl text-uppercase" data-bs-dismiss="modal" type="button">
                                        <i class="fas fa-xmark me-1"></i>
                                        Close Project
                                    </button>
                                    <button class="btn btn-primary btn-xl text-uppercase" onclick="addToCart(${item.id})"  type="submit">
                                    <i class="fa-solid fa-cart-shopping"></i>
                                        Add to cart
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        `
        }

    }

}
showModal(listProduct);
window.addEventListener('DOMContentLoaded', event => {

    // Navbar shrink function
    var navbarShrink = function () {
        const navbarCollapsible = document.body.querySelector('#mainNav');
        if (!navbarCollapsible) {
            return;
        }
        if (window.scrollY === 0) {
            navbarCollapsible.classList.remove('navbar-shrink')
        } else {
            navbarCollapsible.classList.add('navbar-shrink')
        }

    };

    // Shrink the navbar 
    navbarShrink();

    // Shrink the navbar when page is scrolled
    document.addEventListener('scroll', navbarShrink);

    //  Activate Bootstrap scrollspy on the main nav element
    const mainNav = document.body.querySelector('#mainNav');
    if (mainNav) {
        new bootstrap.ScrollSpy(document.body, {
            target: '#mainNav',
            rootMargin: '0px 0px -40%',
        });
    };

    // Collapse responsive navbar when toggler is visible
    const navbarToggler = document.body.querySelector('.navbar-toggler');
    const responsiveNavItems = [].slice.call(
        document.querySelectorAll('#navbarResponsive .nav-link')
    );
    responsiveNavItems.map(function (responsiveNavItem) {
        responsiveNavItem.addEventListener('click', () => {
            if (window.getComputedStyle(navbarToggler).display !== 'none') {
                navbarToggler.click();
            }
        });
    });

});
if (localStorage.getItem('cart') === null) {
    var cart = [];
} else {
    var cart = JSON.parse(localStorage.getItem('cart'));
}
//t·∫°o th∆∞ vi·ªán swal
const swal = window.swal;

function addToCart(id) {
    const product = listProduct.find(item => item.id === id);
    //ki·ªÉm tra xem s·∫£n ph·∫£m c√≥ trong gi·ªè h√†ng ch∆∞a
    const index = cart.findIndex(item => item.id === id);
    if (index === -1) {
        cart.push({
            ...product,
            quantity: 1
        });
    } else {
        cart[index].quantity += 1;
    }
    localStorage.setItem('cart', JSON.stringify(cart));
    console.log(localStorage.getItem('cart'));
    // alert('Add to cart successfully');
    Swal.fire(
        'Add to cart successfully!',
        'You clicked the button!',
        'success'
    )
    setTimeout(function () {
        Swal.fire({
            title: 'Do you want check product in cart?',
            text: "You will go to the cart",
            icon: 'question',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'OK!'
        }).then((result) => {
            if (result.value) {
                location.replace("./cart.html");
            }
        })
    }, 1000);
}
const myCartTmp = localStorage.getItem('cart');
//chuy·ªÉn ƒë·ªïi t·ª´ chu·ªói myCartTnp sang m·∫£ng myCart
const myCart = JSON.parse(myCartTmp);
console.log(myCart);

function showCart(data) {
    const main_cart = document.querySelector('tbody');
    for (let item of data) {
        if (main_cart) {
            main_cart.innerHTML += `
                        <tr>
                            <td><img width="50px" height="50px" src="${item.img}" /> </td>
                            <td>${item.name}</td>
                            <td><input class="form-control" readonly type="text" value="${item.quantity}" /></td>
                            <td class="text-right">${item.price} ‚Ç¨</td>
                            <td class="text-right"><button onclick="remove(${item.id})" class="btn btn-sm btn-danger"><i class="fa fa-trash"></i> </button> </td>
                        </tr>
        `
        }

    }
}
var total = 0;

function showTotal(data) {
    const subTotal = document.querySelector('#subTotal');
    let totalSubMoney = 0;
    for (let item of data) {
        totalSubMoney += item.price * item.quantity;
    }
    if (subTotal) {
        subTotal.innerHTML = totalSubMoney + ' ‚Ç¨';
    }
    total = totalSubMoney + 10;
}
showCart(myCart);
showTotal(myCart);

const totalInner = document.querySelector('#total');
if (totalInner) {
    totalInner.innerHTML = total + ' ‚Ç¨';

}

function remove(id) {

    Swal.fire({
        title: 'Are you sure?',
        text: "Do you want delete this item?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
    }).then((result) => {
        if (result.isConfirmed) {
            const index = cart.findIndex(item => item.id === id);
            if (index !== -1) {
                cart.splice(index, 1);
            }
            localStorage.setItem('cart', JSON.stringify(cart));
            setTimeout(function () {
                Swal.fire(
                    'Deleted!',
                    'Your file has been deleted.',
                    'success'
                )
            }, 2000);
            
            location.reload();

        }
    })




}
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function () {
    'use strict'

    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation')

        // Loop over them and prevent submission
        Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault()
                    event.stopPropagation()
                }
                form.classList.add('was-validated')
            }, false)
        })
    }, false)
}())

function showProductCheckout(data) {
    const main_checkout = document.querySelector('#productCheckout');
    for (let item of data) {
        main_checkout.innerHTML += `
        
        <li class="list-group-item d-flex justify-content-between lh-condensed">
        <div>
            <h6 class="my-0">${item.name}</h6>
            <small class="text-muted">${item.quantity}</small>
        </div>
        <span class="text-muted">${item.quantity*item.price} ‚Ç¨</span>
    </li>        `
    }
}
showProductCheckout(myCart);
const yourCart = document.querySelector('#yourCart');
if (yourCart) {
    yourCart.innerHTML = myCart.length;
}